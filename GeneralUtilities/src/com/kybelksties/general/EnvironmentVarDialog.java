
/*
 * Copyright (C) 2015 Dieter J Kybelksties
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 * @date: 2015-12-16
 * @author: Dieter J Kybelksties
 */
package com.kybelksties.general;

import java.awt.CardLayout;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

/**
 * Dialog class for editing Environment variables. Environment variables are
 * typically plain-old-data types and strings. Therefore setting and editing can
 * be specialised and vetted.
 *
 * @author kybelksd
 */
public class EnvironmentVarDialog extends javax.swing.JDialog
{

    private static final String CLASS_NAME = EnvironmentVarDialog.class.
                                getName();
    private static final Logger LOGGER = Logger.getLogger(CLASS_NAME);

    EnvironmentVar theValue = null;

    /**
     * Creates new form EnvironmentVarDialog.
     *
     * @param parent     parent dialog
     * @param modal      true: modal
     * @param categories array of categories
     */
    public EnvironmentVarDialog(javax.swing.JDialog parent, boolean modal,
                                Object[] categories)
    {
        super(parent, modal);
        initComponents();
        typeComboBox.setModel(new DefaultComboBoxModel(
                PodVariant.Type.values()));
        categoryCombo.setModel(new DefaultComboBoxModel(categories));
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        typeLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox();
        categoryLabel = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        varNameLabel = new javax.swing.JLabel();
        varNameInput = new javax.swing.JTextField();
        categoryCombo = new javax.swing.JComboBox();
        valueControlPanel = new javax.swing.JPanel();
        booleanCheck = new javax.swing.JCheckBox();
        numberSpinner = new javax.swing.JSpinner();
        textScrollPane = new javax.swing.JScrollPane();
        textPane = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        typeLabel.setText(org.openide.util.NbBundle.getMessage(EnvironmentVarDialog.class, "EnvironmentVarDialog.typeLabel.text")); // NOI18N
        getContentPane().add(typeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, -1));

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                typeComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(typeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 240, -1));

        categoryLabel.setText(org.openide.util.NbBundle.getMessage(EnvironmentVarDialog.class, "EnvironmentVarDialog.categoryLabel.text")); // NOI18N
        getContentPane().add(categoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 70, -1));

        okButton.setText(org.openide.util.NbBundle.getMessage(EnvironmentVarDialog.class, "EnvironmentVarDialog.okButton.text")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                okButtonActionPerformed(evt);
            }
        });
        getContentPane().add(okButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, -1, -1));

        cancelButton.setText(org.openide.util.NbBundle.getMessage(EnvironmentVarDialog.class, "EnvironmentVarDialog.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, -1, -1));

        varNameLabel.setText(org.openide.util.NbBundle.getMessage(EnvironmentVarDialog.class, "EnvironmentVarDialog.varNameLabel.text")); // NOI18N
        getContentPane().add(varNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        varNameInput.setText(org.openide.util.NbBundle.getMessage(EnvironmentVarDialog.class, "EnvironmentVarDialog.varNameInput.text")); // NOI18N
        getContentPane().add(varNameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 230, -1));

        categoryCombo.setEditable(true);
        categoryCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(categoryCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 240, -1));

        valueControlPanel.setLayout(new java.awt.CardLayout());

        booleanCheck.setText(org.openide.util.NbBundle.getMessage(EnvironmentVarDialog.class, "EnvironmentVarDialog.booleanCheck.text")); // NOI18N
        valueControlPanel.add(booleanCheck, "BOOLEAN_VALUE");
        valueControlPanel.add(numberSpinner, "NUMBER_VALUE");

        textScrollPane.setViewportView(textPane);

        valueControlPanel.add(textScrollPane, "TEXT_VALUE");

        getContentPane().add(valueControlPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 350, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
    {//GEN-HEADEREND:event_okButtonActionPerformed
        PodVariant.Type type = (PodVariant.Type) typeComboBox.getSelectedItem();
        Object value =
               type.equals(PodVariant.Type.BOOLEAN) ? booleanCheck.isSelected() :
               type.equals(PodVariant.Type.DOUBLE) ? numberSpinner.getValue() :
               type.equals(PodVariant.Type.INTEGER) ? numberSpinner.getValue() :
               type.equals(PodVariant.Type.STRING) ? textPane.getText() :
               type.equals(PodVariant.Type.PATH) ? textPane.getText() :
               null;
        String category = categoryCombo.getSelectedItem().toString();
        if (value != null)
        {
            theValue = new EnvironmentVar(type,
                                          category,
                                          varNameInput.getText(),
                                          true,
                                          new PodVariant(value));
        }
        setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_typeComboBoxActionPerformed
    {//GEN-HEADEREND:event_typeComboBoxActionPerformed
        PodVariant.Type type = (PodVariant.Type) typeComboBox.getSelectedItem();
        CardLayout cardLayout = (CardLayout) (valueControlPanel.getLayout());
        String cardName = type.equals(PodVariant.Type.BOOLEAN) ? "BOOLEAN" :
                          type.equals(PodVariant.Type.DOUBLE) ? "NUMBER" :
                          type.equals(PodVariant.Type.INTEGER) ? "NUMBER" :
                          type.equals(PodVariant.Type.STRING) ? "TEXT" :
                          type.equals(PodVariant.Type.PATH) ? "TEXT" :
                          "BOOLEAN";
        cardLayout.show(valueControlPanel, cardName);

    }//GEN-LAST:event_typeComboBoxActionPerformed

    /**
     * Retrieve the new value previously defined.
     *
     * @return the new value
     */
    public EnvironmentVar getNewValue()
    {
        return theValue;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox booleanCheck;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox categoryCombo;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JSpinner numberSpinner;
    private javax.swing.JButton okButton;
    private javax.swing.JEditorPane textPane;
    private javax.swing.JScrollPane textScrollPane;
    private javax.swing.JComboBox typeComboBox;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JPanel valueControlPanel;
    private javax.swing.JTextField varNameInput;
    private javax.swing.JLabel varNameLabel;
    // End of variables declaration//GEN-END:variables
}
