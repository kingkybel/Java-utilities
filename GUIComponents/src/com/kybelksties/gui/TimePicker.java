package com.kybelksties.gui;

import java.util.Calendar;
import java.util.Date;
import javax.swing.SpinnerNumberModel;

/*
 * @author  Dieter J Kybelksties
 * @date Sep 8, 2016
 *
 */
public class TimePicker extends javax.swing.JPanel
{

    Calendar calendar = Calendar.getInstance();
    String lastTimeFormat;

    /**
     * Creates new form TimePicker.
     */
    public TimePicker()
    {
        initComponents();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);
        int second = calendar.get(Calendar.SECOND);
        int millis = calendar.get(Calendar.MILLISECOND);
        lastTimeFormat = (String) amPm24ComboBox.getSelectedItem();
        setControls(hour, minute, second, millis);
    }

    private void setControls(int hour, int minute, int second, int millis)
    {
        if (amPm24ComboBox.getSelectedItem() == "24")
        {
            hourSpinner.setValue(hour);
        }
        else
        {
            hourSpinner.setValue(hour % 12);
            amPm24ComboBox.setSelectedItem(hour < 12 ? "am" : "pm");
        }
        minuteSpinner.setValue(minute);
        secondsSpinner.setValue(second);
        millisecondsSpinner.setValue(millis);
    }

    public Date getTime()
    {
        return calendar.getTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        hourSpinner = new javax.swing.JSpinner();
        colonLabel1 = new javax.swing.JLabel();
        minuteSpinner = new javax.swing.JSpinner();
        colonLabel2 = new javax.swing.JLabel();
        secondsSpinner = new javax.swing.JSpinner();
        dotLabel = new javax.swing.JLabel();
        millisecondsSpinner = new javax.swing.JSpinner();
        spaceLabel = new javax.swing.JLabel();
        amPm24ComboBox = new javax.swing.JComboBox();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        hourSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        hourSpinner.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                hourSpinnerStateChanged(evt);
            }
        });
        add(hourSpinner);

        colonLabel1.setText(org.openide.util.NbBundle.getMessage(TimePicker.class, "TimePicker.colonLabel1.text")); // NOI18N
        add(colonLabel1);

        minuteSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        minuteSpinner.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                minuteSpinnerStateChanged(evt);
            }
        });
        add(minuteSpinner);

        colonLabel2.setText(org.openide.util.NbBundle.getMessage(TimePicker.class, "TimePicker.colonLabel2.text")); // NOI18N
        add(colonLabel2);

        secondsSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        secondsSpinner.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                secondsSpinnerStateChanged(evt);
            }
        });
        add(secondsSpinner);

        dotLabel.setText(org.openide.util.NbBundle.getMessage(TimePicker.class, "TimePicker.dotLabel.text")); // NOI18N
        add(dotLabel);

        millisecondsSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));
        millisecondsSpinner.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                millisecondsSpinnerStateChanged(evt);
            }
        });
        add(millisecondsSpinner);

        spaceLabel.setText(org.openide.util.NbBundle.getMessage(TimePicker.class, "TimePicker.spaceLabel.text")); // NOI18N
        add(spaceLabel);

        amPm24ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "24", "am", "pm" }));
        amPm24ComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                amPm24ComboBoxActionPerformed(evt);
            }
        });
        add(amPm24ComboBox);
    }// </editor-fold>//GEN-END:initComponents

    private void hourSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_hourSpinnerStateChanged
    {//GEN-HEADEREND:event_hourSpinnerStateChanged
        updateModelFromControls();
    }//GEN-LAST:event_hourSpinnerStateChanged

    private void minuteSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_minuteSpinnerStateChanged
    {//GEN-HEADEREND:event_minuteSpinnerStateChanged
        updateModelFromControls();
    }//GEN-LAST:event_minuteSpinnerStateChanged

    private void secondsSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_secondsSpinnerStateChanged
    {//GEN-HEADEREND:event_secondsSpinnerStateChanged
        updateModelFromControls();
    }//GEN-LAST:event_secondsSpinnerStateChanged

    private void millisecondsSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_millisecondsSpinnerStateChanged
    {//GEN-HEADEREND:event_millisecondsSpinnerStateChanged
        updateModelFromControls();
    }//GEN-LAST:event_millisecondsSpinnerStateChanged

    private void amPm24ComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_amPm24ComboBoxActionPerformed
    {//GEN-HEADEREND:event_amPm24ComboBoxActionPerformed

        updateModelFromControls();
    }//GEN-LAST:event_amPm24ComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox amPm24ComboBox;
    private javax.swing.JLabel colonLabel1;
    private javax.swing.JLabel colonLabel2;
    private javax.swing.JLabel dotLabel;
    private javax.swing.JSpinner hourSpinner;
    private javax.swing.JSpinner millisecondsSpinner;
    private javax.swing.JSpinner minuteSpinner;
    private javax.swing.JSpinner secondsSpinner;
    private javax.swing.JLabel spaceLabel;
    // End of variables declaration//GEN-END:variables

    private void updateModelFromControls()
    {
        String timeFormat = (String) amPm24ComboBox.getSelectedItem();
        int hourValue = (int) hourSpinner.getValue();
        if (null != timeFormat && (!timeFormat.equals(lastTimeFormat)))
        {
            switch (timeFormat)
            {
                case "24":
                    hourSpinner.setModel(
                            new SpinnerNumberModel(
                                    "pm".equals(lastTimeFormat) ?
                                    hourValue + 12 : hourValue, 0, 23, 1));
                    break;
                case "am":
                    hourSpinner.setModel(
                            new SpinnerNumberModel(hourValue % 12, 0, 11, 1));
                    break;
                case "pm":
                    hourSpinner.setModel(
                            new SpinnerNumberModel(hourValue % 12, 0, 11, 1));
                    break;
            }
            lastTimeFormat = timeFormat;
        }
        calendar.set(Calendar.HOUR, "24".equals(timeFormat) ? hourValue :
                                    "am".equals(timeFormat) ? hourValue :
                                    hourValue + 12);
        calendar.set(Calendar.MINUTE, (int) minuteSpinner.getValue());
        calendar.set(Calendar.SECOND, (int) secondsSpinner.getValue());
        calendar.set(Calendar.MILLISECOND, (int) millisecondsSpinner.getValue());
    }
}
